{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdoe\\\\OneDrive\\\\Desktop\\\\final\\\\Frontend\\\\frontend\\\\src\\\\components\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport OrderDataService from \"../services/rabbit\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from 'react';\nimport Cart from \"./CartComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [prices, setprices] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: prices[prices.length - 1].props.Price * 100,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    retrievePrice();\n  }, []);\n\n  const retrievePrice = () => {\n    OrderDataService.getAll().then(response => {\n      //console.log(response.data);\n      setprices(response.data.map(Pr => /*#__PURE__*/_jsxDEV(\"totalPrice\", {\n        Price: Pr.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 43\n      }, this)));\n      return prices;\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: '#ffffff'\n        },\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#004b07'\n      },\n      align: \"center\",\n      children: \"Payment Successful Thank You!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"eRz8ScCno2ggiefST35zZyZE3BA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","OrderDataService","axios","React","useState","useEffect","Cart","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","prices","setprices","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","length","props","Price","data","console","log","message","retrievePrice","getAll","then","map","Pr","totalPrice","catch"],"sources":["C:/Users/abdoe/OneDrive/Desktop/final/Frontend/frontend/src/components/PaymentForm.js"],"sourcesContent":["import { CardElement, useElements, useStripe, } from \"@stripe/react-stripe-js\"\nimport OrderDataService from \"../services/rabbit\";\nimport axios from \"axios\"\nimport React, { useState, useEffect } from 'react'\nimport Cart from \"./CartComponent\"\n\nconst CARD_OPTIONS = {\n\ticonStyle: \"solid\",\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: \"#c4f0ff\",\n\t\t\tcolor: \"#fff\",\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n\t\t\tfontSize: \"16px\",\n\t\t\tfontSmoothing: \"antialiased\",\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: \"#ffc7ee\",\n\t\t\tcolor: \"#ffc7ee\"\n\t\t}\n\t}\n}\n\nexport default function PaymentForm() {\n    const [success, setSuccess ] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n    \n    const [prices, setprices] = useState([]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n    if(!error) {\n        try {\n            const {id} = paymentMethod\n            const response = await axios.post(\"http://localhost:4000/payment\", {\n                amount: (prices[prices.length-1].props.Price)*100,\n                id\n            })\n\n            if(response.data.success) {\n                console.log(\"Successful payment\")\n                setSuccess(true)\n            }\n\n        } catch (error) {\n            console.log(\"Error\", error)\n        }\n    } else {\n        console.log(error.message)\n    }\n}\n\n\nuseEffect(() => {\n  retrievePrice();\n}, [])\n\nconst retrievePrice = () => {\n    OrderDataService.getAll()\n      .then(response => {\n        //console.log(response.data);\n        setprices(response.data.map((Pr)=><totalPrice Price={Pr.totalPrice}/>))\n        return prices\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n    return (\n        <>\n        {!success ? \n        <form onSubmit={handleSubmit}>\n            <fieldset className=\"FormGroup\">\n                <div className=\"FormRow\">\n                    <CardElement options={CARD_OPTIONS}/>\n                </div>\n                <div>\n                    .\n                </div>\n            </fieldset>\n            <button style={{ color: '#ffffff' }}>Checkout</button>\n        </form>\n        : \n            <h2 style={{ color: '#004b07' }} align=\"center\">Payment Successful Thank You!</h2>\n        }\n            \n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}